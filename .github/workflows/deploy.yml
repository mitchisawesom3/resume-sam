name: Deploy to S3

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      newapi: ${{ steps.api.outputs.api }}
    env:
      BUCKET_CHECK: ${{ secrets.INITIAL_SETUP == '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install nodejs 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Setup sam cli
        uses: aws-actions/setup-sam@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Create S3 Bucket
        if: ${{ env.BUCKET_CHECK == 'true' }}
        run: aws s3api create-bucket --bucket ${{ secrets.AWS_BUCKET }} ; gh secret set INITIAL_SETUP --body "complete"
        env:
          GITHUB_TOKEN: ${{ secrets.OAUTH }}

      - name: Build sam template
        run: sam build  

      - name: Deploy sam template
        run: |
          echo "OUTPUT<<EOF" >> $GITHUB_ENV
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name ${{ secrets.AWS_STACK_NAME }} --s3-bucket ${{ secrets.AWS_BUCKET }} --capabilities CAPABILITY_IAM --region ${{ secrets.AWS_REGION }} --parameter-overrides BucketName=${{ secrets.SITE_BUCKET }} >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Store API URL in variable for testing
        run: echo "${{ env.OUTPUT }}" | awk '/Value/{print "API="$2}' >> $GITHUB_ENV

#      - name: Run curl on API URL
#        if: ${{ env.API_URL != '' }}
#        run: curl $API_URL

      - id: api
        run: echo "::set-output name=api::${{ env.API }}"
  configure-site-repo:
    runs-on: ubuntu-latest
    needs: deploy
    env:
      API_CHECK: ${{ needs.deploy.outputs.newapi != '' }}
    steps:
      - run: echo "${{ needs.deploy.outputs.newapi }}"
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          repository: mitchisawesom3/resume-site
          token: ${{ secrets.DEPLOY_TOKEN }}

      - name: List secrets test
        run: |
          echo "SECRETS_CHECK<<EOF" >> $GITHUB_ENV
          gh secret list | egrep "AWS_BUCKET|AWS_KEY_ID|AWS_SECRET_ACCESS_KEY|CF_DISTRIBUTION|CF_KEY_ID|CF_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.OAUTH }}

      - name: Configure Initial AWS Credentials
        if: ${{ env.SECRETS_CHECK == '' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Read secrets into environment variables
        if: ${{ env.SECRETS_CHECK == '' }}
        uses: abhilash1in/aws-secrets-manager-action@v2.1.0
        with:
          secrets: /
          parse-json: true

      - name: Create secrets in resume-site repo
        if: ${{ env.SECRETS_CHECK == '' }}
        run: |
          gh secret set AWS_KEY_ID --body "${{ env.__AWS_KEY_ID }}"
          gh secret set AWS_SECRET_ACCESS_KEY --body "${{ env.__AWS_SECRET_ACCESS_KEY }}"
          gh secret set CF_KEY_ID --body "${{ env.__CF_KEY_ID }}"
          gh secret set CF_SECRET_ACCESS_KEY --body "${{ env.__CF_SECRET_ACCESS_KEY }}"
          gh secret set CF_DISTRIBUTION --body "${{ env.__CF_DISTRIBUTION }}"
          gh secret set AWS_BUCKET --body "${{ env.__AWS_BUCKET }}"
        env:
          GITHUB_TOKEN: ${{ secrets.OAUTH }}

      - name: Update API URL
        if: ${{ env.API_CHECK == 'true' }}
        run: |
          perl -pe 's/(?<=https:\/\/)\w{1,10}/${{ needs.deploy.outputs.newapi }}1/g' -i ./public/index.js
          git config --global user.name "mitchisawesom3"
          git config --global user.email "mitch@mitchbounds.com"
          git add -A
          git commit -m "Update new API URL"
          echo "${{ secrets.DEPLOY_KEY }}" > ../deploykey
          GIT_SSH_COMMAND="ssh -i ../deploykey" git push
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}

      - name: Push to resume-site repsoitory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          API_TOKEN_GITHUB: ${{ secrets.DEPLOY_TOKEN }}
        with:
          source-directory: './'
          destination-github-username: 'mitchisawesom3'
          destination-repository-name: 'resume-site'
          user-email: 'mitch@mitchbounds.com'
          target-branch: master
